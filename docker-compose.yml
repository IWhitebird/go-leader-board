version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: leaderboard-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - leaderboard
    restart: unless-stopped
    networks:
      - leaderboard-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  leaderboard:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=leaderboard
      - DB_SSLMODE=disable
      - GIN_MODE=release
    volumes:
      - leaderboard-data:/app/data
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - leaderboard-network
    deploy:
      mode: replicated
      replicas: ${LEADERBOARD_REPLICAS:-4}
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:17-alpine
    container_name: leaderboard-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=leaderboard
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - leaderboard-network
    command: postgres -c 'max_connections=100' -c 'shared_buffers=256MB' -c 'work_mem=16MB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:5432:5432"

volumes:
  postgres-data:
  leaderboard-data:

networks:
  leaderboard-network:
    driver: bridge 