# Extract game_id from various URL patterns
map $uri $game_id {
    ~^/api/leaderboard/top/(?<id>\d+) $id;
    ~^/api/leaderboard/rank/(?<id>\d+)/ $id;
    ~^/api/leaderboard/score/(?<id>\d+) $id;
    default "";
}

upstream leaderboard_backend {
    # Use consistent hashing based on game_id to ensure same game always goes to same server
    hash $game_id consistent;
    
    # All 4 leaderboard services from docker-compose
    server leaderboard-1:8081;
    server leaderboard-2:8082;
    server leaderboard-3:8083;
    server leaderboard-4:8084; 
}

server {
    listen 80;
    server_name localhost;
    
    # Health check endpoint for the load balancer itself
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    # Pass all other requests to the leaderboard backend
    location / {
        proxy_pass http://leaderboard_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add custom headers for debugging (optional)
        proxy_set_header X-Game-ID $game_id;
        
        # Timeouts for long-running requests
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Deny access to .git, .svn, etc
    location ~ /\. {
        deny all;
    }
    
    # Error handling
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 